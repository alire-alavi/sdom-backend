service: nest-app
provider:
  name: aws
  runtime: nodejs18.x
  region: me-central-1
  versionFunctions: false
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:*'

resources:
  Resources:
    ConfigTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: SdomConfig-${sls:stage}
        AttributeDefinitions:
          - AttributeName: 'ConfigId'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'ConfigId'
            KeyType: 'HASH'
        BillingMode: PAY_PER_REQUEST

    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: SdomUsersTable-${sls:stage}
        AttributeDefinitions:
          - AttributeName: 'UserId'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'UserId'
            KeyType: 'HASH'
        BillingMode: PAY_PER_REQUEST

    QuestionsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: SdomQuestionsTable-${sls:stage}
        AttributeDefinitions:
          - AttributeName: 'QuestionId'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'QuestionId'
            KeyType: 'HASH'
        BillingMode: PAY_PER_REQUEST

functions:
  api:
    handler: dist/lambda.handler
    environment:
      USERS_TABLE: !Ref UsersTable
      QUESTIONS_TABLE: !Ref QuestionsTable
      CONFIG_TABLE: !Ref ConfigTable
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: '{proxy+}'
          method: ANY

package:
  include:
    - dist/**
    - node_modules/**
    - package.json
